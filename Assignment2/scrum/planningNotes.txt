For this simulation, A2Part1 will be one code sprint.

Start the sprint by holding a Sprint Planning Meeting.
	Review the productBacklog
		Clarify User Stories
		Re-prioritize User Stories (and Bugs)
		Add estimates to user stories. In our case, 
		add 1,2,4,8 hour estimates to each UserStory.
		As the project evolves, these estimates can change.
		
		Plan on 4 hours work/day.
		
		Add/Remove User Stories (and Bugs) as appropriate.
	Choose User Stories and Bugs that will fit into the next
	Sprint. These will go into the springBacklog. 
	Assign User Stories to team members.
	
Sprint
    Each during the sprint, team members work on their user stories
    chosen from the sprintBacklog. A user story can not be
    shared by more than 1 team member.
        Each day work on the chosen SprintBacklog user stories.
        Probably best to focus on one until it is finished.

Sprint Review
    At the end of the sprint, review the status of the
    Sprint Backlog. Those items that are finished should
    have their status changed.

    Some UserStories that are not complete will appear in
    the next Sprint for completion, so could appear in two sprints.
    Record the word done in the first sprint, marking it as incomplete
    and then the work done in the second sprint, marking it as complete.

What the files mean:

planningNotes.txt (read this first)
productBacklog.txt
    Place User Stories here. I gave you most of them to start.
    They may be incomplete, not well specified, and you may have more.   
    They are very fine grained, so that you can make small steps.   

sprintBacklog.txt
    After a Scrum Planing Meeting, some Product Backlog   
    user stories have priorities as well as estimates.
    From those you choose a few to fit into the 1 week sprint.
    These are moved into the appropriate sprintBacklog.

dailyScrumMeeting[1-4].txt
    Each team member fill theirs out each day.
